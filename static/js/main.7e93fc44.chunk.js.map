{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalise","msg","Navbar","mode","href","title","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aboutt","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","head","value","onChange","event","target","backgroundColor","rows","newtext","showAlert","console","log","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","App","setMode","_useState3","_useState4","setAlert","massage","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7e93fc44.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalise = (word) =>{\r\n            const lower = word.toLowerCase();\r\n            return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalise(props.alert.type)}</strong> : {props.alert.msg}\r\n</div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item active\">\r\n          <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\"></span></a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.aboutt}</a>\r\n        </li>\r\n        \r\n      </ul>\r\n      {/* <form className=\"form-inline my-2 my-lg-0\">\r\n        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n      </form> */}\r\n     <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Change Mode</label>\r\n</div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {title: PropTypes.string,\r\n                    aboutt: PropTypes.string};\r\nNavbar.defaultProps ={\r\n    title : 'hallo',\r\n    aboutt : 'check'\r\n}","import React,{useState} from \"react\";\r\n\r\nexport default function TextForm(props){\r\n    \r\n    const handleOnClick =() =>{\r\n                      \r\n            let newtext = text.toUpperCase();\r\n            setText(newtext);\r\n            props.showAlert(\"Converted to upper case\",\"success\");\r\n    }\r\n    const handleLowClick =() =>{\r\n                  \r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to lower case\",\"success\");\r\n}\r\nconst handleToClear =() =>{\r\n            let newtext = \" \";\r\n            setText(newtext);\r\n            props.showAlert(\"Text cleared\",\"success\");\r\n   \r\n}\r\nconst handleToclearWord =() =>{\r\n            let newtext = text +\".\";\r\n            setText(newtext);\r\n            props.showAlert(\"Full stop added\",\"success\");\r\n    \r\n}\r\n    const handleOnChange =(event) =>{\r\n        \r\n        setText(event.target.value);\r\n}\r\n    const handlecopy =()=>{\r\n            console.log(\"i am copy function\");\r\n            var text = document.getElementById(\"mybox\");\r\n            text.select();\r\n            navigator.clipboard.writeText(text.value);\r\n            props.showAlert(\"Text copied to clipboard\",\"success\");\r\n    }\r\n\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return(       \r\n        <>\r\n        <div className=\"contaner\" style ={{color: props.mode==='light'?'black':'white'}}>\r\n        <h1>{props.head}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'#343a40', color: props.mode==='light'?'black':'white' }} id=\"mybox\" rows=\"9\"></textarea>\r\n        </div>\r\n            <button className='btn btn-primary mx-2 my-2' onClick={handleOnClick}>Convert to Upper Case</button>\r\n            <button className='btn btn-primary mx-2 my-2' onClick={handleLowClick}>Convert to Lower Case</button>\r\n            <button className='btn btn-primary mx-2 my-2' onClick={handleToClear}>Clear text</button>\r\n            <button className='btn btn-primary mx-2 my-2' onClick={handleToclearWord}>Add full stop</button>\r\n            <button className='btn btn-primary mx-2 my-2' onClick={handlecopy}>copy text</button>\r\n        </div>\r\n        <div className=\"contaner my-2\"  style ={{color: props.mode==='light'?'black':'white'}}>\r\n            <h1>Your text summery</h1>\r\n            <p>{text.split(\" \").length-1} words and {text.length} characters</p>\r\n            <p>{0.008*(text.split(\" \").length-1)} minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"enter to preview the text\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import  { useState } from 'react';\nimport './App.css';\n// import About from './Components/About';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React from \"react\";\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert =(massage, type) =>{\n      setAlert({\n        msg : massage,\n        type : type\n      })\n      setTimeout(()=>{\n        setAlert(null);\n\n      }, 2000);\n      }\n  \n\n  const toggleMode = () =>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#343a40';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title = \"Text Utils- home(dark)\";\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title = \"Text Utils- home\";\n    }\n    \n\n  }\n  return (\n   <>\n   {/* <Router> */}\n\n   <Navbar title=\"Manipulating TexT\" aboutt=\"about\" mode={mode} toggleMode={toggleMode}/>\n   <Alert alert={alert}/>\n   <div className=\"container my-3\">\n   {/* <Routes>\n    <Route exact path=\"/about\" element={<About mode={mode}/>} /> */}\n    <TextForm head=\"Enter your text to analyse\" mode={mode} showAlert={showAlert}/>\n{/* </Routes>            */}\n   </div>\n   {/* </Router> */}\n\n   </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}